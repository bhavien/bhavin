name: Deploy to Play Store

on:
  push:
    branches:
      - master

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Generate Release APK
#        run: ./gradlew assembleRelease
#      - name: Sign APK
#        uses: r0adkll/sign-android-release@v1
#        # ID used to access action output
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }} #Qzhdc07WOQXgxz27pyaLMImWFpw=
#          alias: ${{ secrets.ALIAS }} #key0
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }} #cicidemo
#          keyPassword: ${{ secrets.KEY_PASSWORD }} #cicidemo
#      - uses: actions/upload-artifact@master
#        with:
#          name: app-release.apk
#          path: app/build/outputs/apk/release/app-release.apk
#      - uses: actions/upload-artifact@master
#        with:
#          name: mapping.txt
#          path: app/build/outputs/mapping/release/mapping.txt
#
#
#  deploy-play-store:
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#      # 1
#      - uses: actions/download-artifact@master
#        with:
#          name: app-release.apk
#      - uses: actions/download-artifact@master
#        with:
#          name: mapping.txt
#      # 2
#      - name: Publish to Play Store internal test track
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#          # 3
#          packageName: com.cicddemo.app
#          releaseFiles: app-release.apk
#          track: production
#          userFraction: 0.50
#          mappingFile: mapping.txt
#
#  #
#  #      # Execute unit tests
#  #      - name: Unit Test
#  #        run: ./gradlew testDebugUnitTest
#  #
#  #      - name: Android Test Report
#  #        uses: asadmansr/android-test-report-action@v1.2.0
#  #        if: ${{ always() }} # IMPORTANT: run Android Test Report

